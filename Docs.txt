#this getting complex. I need to write this down
#*
Main Obj

anything hooking to the mainserver IPv6
client to client IPv4
anything else read the  program its not MC

*#

******************************************************Def

"lo" is a reference to the ipaddress.

With the Ips I got ipv4/6 with the host server and the port connection at 52:
    main client server should hook up the the IPv6
    under da hood should be at IPv4

"ear" refers to the lister func#mainly server stuff but lowkey network:
        pass#ima need this space later

(1)URL is MainBackend.abc:53#this is the main host server(basically my operator)

"pawPrint" is a refer to the "postbox" and Soil_options
"Postbox" is where you can post and meant to be written on a dataserver and meant to call the ManeServ

**********************************************Configs

*ManeHosCon:
    earConfig is meant to be some type of listener method. gotta flush it some mo
    loConfig meant for theconnection handles
    Operator is meant to handle the switchboard and connections
    switchbord is helping the operators(like tha machine it would be more bulky)

*****************************************************************Socks its the freaking connnect crap

keeping tabs on my socks right here
apparently sockets is like a lmph node where informations from top-level,skin-level, user-application level and take the information to hardware connections(Central Nervous System)
sockets are an End point
#this helps or is handy with remote to local access
#API-> Application Program Interface... why is not of it written in an acutally lingo nvm go J.S(Sockets are the standard)
sockets are supposed to be "thread-safe"
sockets a reperesnted by an int called socket descriptor
socket only alive when the link is open
you can do socket to socket connection and communcation

socket provide two connection:
    (1) connection oriented:
        which means there already an established line.(Means the machines has a connection with the other computer)
    (2) connectionless:
        is where there is not established line btw the client and host server

how characteristics are made:
    socket address familty determines tbe format of the address for the socket
    the type determine the form of communication
    the protocols its built with is what the API must build upon

network routines allow sockets to get info from DNS,host,protocol, service, network files

the addr()func on the socket api decides the format of the
